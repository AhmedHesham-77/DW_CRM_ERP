CREATE OR REPLACE PROCEDURE SILVER.LOAD_SILVER () LANGUAGE PLPGSQL AS $$
BEGIN

-- Transformation of CRM_CUST_INFO table
TRUNCATE TABLE SILVER.CRM_CUST_INFO;

INSERT INTO
	SILVER.CRM_CUST_INFO
SELECT
	CST_ID,
	CST_KEY,
	CST_FIRSTNAME,
	CST_LASTNAME,
	CST_MARITAL_STATUS,
	CST_GNDR,
	CST_CREATE_DATE
FROM
	(
		SELECT
			CST_ID,
			CST_KEY,
			TRIM(CST_FIRSTNAME) AS CST_FIRSTNAME,
			TRIM(CST_LASTNAME) AS CST_LASTNAME,
			CASE UPPER(TRIM(CST_MARITAL_STATUS))
				WHEN 'M' THEN 'Married'
				WHEN 'S' THEN 'Single'
				ELSE 'n/a'
			END AS CST_MARITAL_STATUS,
			CASE UPPER(TRIM(CST_GNDR))
				WHEN 'M' THEN 'Male'
				WHEN 'F' THEN 'Female'
				ELSE 'n/a'
			END AS CST_GNDR,
			CST_CREATE_DATE,
			ROW_NUMBER() OVER (
				PARTITION BY
					CST_ID
				ORDER BY
					CST_CREATE_DATE DESC
			) AS DATE_RANK
		FROM
			BRONZE.CRM_CUST_INFO
	)
WHERE
	DATE_RANK = 1;

-- Transformation of CRM_PRD_INFO table
TRUNCATE TABLE SILVER.CRM_PRD_INFO;

INSERT INTO
	SILVER.CRM_PRD_INFO
SELECT
	PRD_ID,
	SUBSTRING(PRD_KEY, 1, 5) AS CAT_ID,
	SUBSTRING(PRD_KEY, 7) AS PRD_KEY,
	PRD_NM,
	COALESCE(PRD_COST, 0) AS PRD_COST,
	CASE
		WHEN UPPER(TRIM(PRD_LINE)) = 'M' THEN 'Mountain'
		WHEN UPPER(TRIM(PRD_LINE)) = 'R' THEN 'Road'
		WHEN UPPER(TRIM(PRD_LINE)) = 'S' THEN 'Other Sales'
		WHEN UPPER(TRIM(PRD_LINE)) = 'T' THEN 'Touring'
		ELSE 'n/a'
	END AS PRD_LINE,
	PRD_START_DT,
	LEAD(PRD_START_DT, 1) OVER (
		PARTITION BY
			PRD_KEY
		ORDER BY
			PRD_START_DT
	) - 1 AS PRD_END_DT
FROM
	BRONZE.CRM_PRD_INFO;

-- Transformation of CRM_SALES_DETAILS table
TRUNCATE TABLE SILVER.CRM_SALES_DETAILS;

INSERT INTO
	SILVER.CRM_SALES_DETAILS
SELECT
	SLS_ORD_NUM,
	SLS_PRD_KEY,
	SLS_CUST_ID,
	CASE
		WHEN LENGTH(CAST(SLS_ORDER_DT AS TEXT)) < 8 THEN NULL
		ELSE SLS_ORDER_DT
	END AS SLS_ORDER_DT,
	CASE
		WHEN LENGTH(CAST(SLS_SHIP_DT AS TEXT)) < 8 THEN NULL
		ELSE SLS_SHIP_DT
	END AS SLS_SHIP_DT,
	CASE
		WHEN LENGTH(CAST(SLS_DUE_DT AS TEXT)) < 8 THEN NULL
		ELSE SLS_DUE_DT
	END AS SLS_DUE_DT,
	CASE
		WHEN SLS_PRICE < 0 THEN SLS_SALES
		ELSE SLS_QUANTITY * SLS_PRICE
	END AS SLS_SALES,
	SLS_QUANTITY,
	CASE
		WHEN SLS_PRICE < 0 THEN SLS_PRICE * -1
		ELSE SLS_PRICE
	END AS SLS_PRICE
FROM
	BRONZE.CRM_SALES_DETAILS;

-- Transformation of ERP_CUST_AZ12 table
TRUNCATE TABLE SILVER.ERP_CUST_AZ12;

INSERT INTO
	SILVER.ERP_CUST_AZ12

SELECT
	CID,
	CASE
		WHEN BDATE > CURRENT_DATE THEN NULL
		ELSE BDATE
	END AS BDATE,
	CASE SUBSTRING(TRIM(GEN),1,1) WHEN 'M' THEN 'Male'
	WHEN 'F' THEN 'Female'
	ELSE 'n/a'
	END AS GEN
FROM
	BRONZE.ERP_CUST_AZ12;
	
-- Transformation of ERP_LOC_A101 table
TRUNCATE TABLE SILVER.ERP_LOC_A101;

INSERT INTO
	SILVER.ERP_LOC_A101
SELECT
	CONCAT(SUBSTRING(CID,1,2), SUBSTRING(CID,4)),
	CASE
		WHEN TRIM(CNTRY) IN ('US', 'USA') THEN 'United States'
		WHEN TRIM(CNTRY) = 'DE' THEN 'Germany'
		WHEN TRIM(CNTRY) IS NULL
		OR TRIM(CNTRY) = '' THEN 'n/a'
		ELSE TRIM(CNTRY)
	END AS CNTRY
FROM
	BRONZE.ERP_LOC_A101;

-- Transformation of ERP_PX_CAT_G1V2 table
TRUNCATE TABLE SILVER.ERP_PX_CAT_G1V2;

INSERT INTO
	SILVER.ERP_PX_CAT_G1V2
SELECT
	SUBSTRING(ID,1,2)|| '-' ||SUBSTRING(ID,4) AS ID,
	CAT,
	SUBCAT,
	MAINTENANCE
FROM
	BRONZE.ERP_PX_CAT_G1V2;
	
EXCEPTION
	WHEN OTHERS THEN
		RAISE NOTICE 'Error while loading silver transformations :%', SQLERRM;
END $$;